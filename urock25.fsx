#r "nuget: FunSharp.Ru, 0.0.5"
#r "nuget: FSharp.Core.Russian, 0.0.6"
#r "nuget: Russian.System.Runtime, 0.0.1"

open Библиотека
open Фшарп.Ядро
open Библиотека.Цвета
open Система.ВВ
open System
ГрафическоеОкно.ЦветПера <-Цвета.Красный
ГрафическоеОкно.ЦветКисти <-Цвета.Зеленый
ГрафическоеОкно.ЦветФона <-Цвета.Синий
ГрафическоеОкно.РазмерШрифта <- 70


let алфавит = "абвгдеёжзийклмнопрстуфх"
let введенные_буквы = Фигуры.ДобавитьТекст ""
let случайное_слово = 
    Посл.иниц 10 (fun и -> 
        let количество_букв = алфавит.Length - 1
        let номер_буквы = Математика.ВзятьСлучайноеЧисло(количество_букв)
        алфавит[номер_буквы]) 
    |> Посл.отобразить строка
    |> String.concat ""

напечататьфн "0 - %s" случайное_слово
напечататьфн "0 + %s" случайное_слово
// снрнжмкнёе
// снрн
let новое_случайное_слово () =
    Посл.иниц 10 (fun и -> 
        let количество_букв = алфавит.Length - 1
        let номер_буквы = Математика.ВзятьСлучайноеЧисло(количество_букв)
        алфавит[номер_буквы]) 
    |> Посл.отобразить строка
    |> String.concat ""

напечататьфн "1 - %s" (новое_случайное_слово())
напечататьфн "2 - %s" (новое_случайное_слово())
напечататьфн "3 - %s" (новое_случайное_слово())
напечататьфн "4 - %s" (новое_случайное_слово())
if Файл.Существует ("словарь.txt")then
    let словарь = Файл.ПрочитатьВсеЛинии("словарь.txt")
    let новое_случайное_слово_из_словаря () =
        let количество_слов = словарь.Length - 1
        let номер_слова = Математика.ВзятьСлучайноеЧисло(количество_слов)
        словарь[номер_слова]


    напечататьфн "1 - %s" (новое_случайное_слово_из_словаря())
    напечататьфн "2 - %s" (новое_случайное_слово_из_словаря())
    напечататьфн "3 - %s" (новое_случайное_слово_из_словаря())
    напечататьфн "4 - %s" (новое_случайное_слово_из_словаря())
    let русская_раскладка_клавиатура = dict [
        "Q", "Й"
        "W", "Ц"
        "E", "У"
        "R", "К"
        "T", "Е"
        "Y", "Н"
        "U", "Г"
        "I", "Ш"
        "O", "Щ"
        "P", "З"
        "Oem4", "Х"
        "OemCloseBrackets", "Ъ"
        "OemPipe", "//"
        "LWin", "LWin"
        "A" , "Ф"
        "S" , "Ы"
        "D" , "В"
        "F" , "А"
        "G" , "П"
        "H" , "Р"
        "J" , "О"
        "K" , "Л"
        "L" , "Д"
        "OemSemicolon" , "Ж"
        "OemQuotes" , "Э"
        "Z" , "Я"
        "X" , "Ч"
        "C" , "С"
        "V" , "М"
        "B" , "И"
        "N" , "Т"
        "M" , "Ь"
        "OemComma" , "Б"
        "OemPeriod" , "Ю"
        "Oem2" , "."
        "CapsLock", ""
        "Return",""
        "Back" , ""
        "Escape", ""
        "F1",""
        "F2",""
        "F3",""
        "F4",""
        "F5",""
        "F6",""
        "F7",""
        "F8",""
        "F9",""
        "F10",""
        "F11",""
        "F12",""
        "Delete",""
        "NumLock",""
        "Home",""
        "Prior",""
        "PageDown",""
        "End",""
        "OemTilde",""
        "D1",""
        "D2",""
        "D3",""
        "D4",""
        "D5",""
        "D6",""
        "D7",""
        "D8",""
        "D9",""
        "D0",""
        "OemMinus",""
        "OemPlus",""
        "Tab",""
        "Up",""
        "Left",""
        "Clear",""
        "NumPad0",""
        "NumPad1",""
        "NumPad2",""
        "NumPad3",""
        "NumPad4",""
        "NumPad5",""
        "NumPad6",""
        "NumPad7",""
        "NumPad8",""
        "NumPad9",""
        "Right",""
        "End",""
        "Down",""
        "LeftShift",""
        "LeftCtrl",""
        "RightCtrl",""
        "Fn",""
        "LeftAlt",""
        "RightAlt",""
        "Space",""
        "Apps",""

    ]
    let mutable загаданое_слово = новое_случайное_слово_из_словаря() 
    let mutable введенные_буквы_игрока = ""
    let mutable ошибки  = 0 
    let mutable количество_слов = 0
    let mutable количество_букв = 0
    let ошибки_текст = Фигуры.ДобавитьТекст "" 
    ГрафическоеОкно.ЦветКисти <- Красный
    let количество_слов_текст = Фигуры.ДобавитьТекст ""
    let слово = Фигуры.ДобавитьТекст "" 
    let обработка () =
        let кнопка = ГрафическоеОкно.ПоследняяКнопка
        напечататьфн "кнопка = %s" кнопка
        let русская_буква = русская_раскладка_клавиатура[кнопка]
        напечататьфн "русская буква = %s" русская_буква
        
        напечататьфн "%d" количество_букв
        напечататьфн "ошибки = %d" ошибки
        напечататьфн "введеные буквы = %s" введенные_буквы_игрока
        if введенные_буквы_игрока = загаданое_слово then
            ()
        else

            if русская_буква = строка  загаданое_слово[количество_букв]then 
                введенные_буквы_игрока <- введенные_буквы_игрока + русская_буква
                количество_букв <- количество_букв + 1
                напечататьфн "%s" введенные_буквы_игрока
            else 
                ошибки <- ошибки + 1
                if ошибки = 3 then 
                    напечататьфн "количество слов = %d" количество_слов
                    Программа.Закончить()
        //if количество_букв
        if ГрафическоеОкно.ПоследняяКнопка ="Return" then
            let новое_загаданое_слово = новое_случайное_слово_из_словаря()
            загаданое_слово <- новое_загаданое_слово 
            Фигуры.УстановитьТекст (слово,(sprintf "%s" загаданое_слово))
            введенные_буквы_игрока <- ""
            количество_букв <- 0
            количество_слов <- количество_слов + 1


        
    ГрафическоеОкно.КнопкаНажата <- обработка
    //введенные_буквы_игрока @<- введенные_буквы_игрока [обработка]
    ГрафическоеОкно.ЦветКисти <- Красный
    Фигуры.УстановитьТекст (слово,(sprintf "%s" загаданое_слово))
    Фигуры.Переместить (слово,260,220)
    Фигуры.Переместить (введенные_буквы,260,260)
    Фигуры.Переместить (ошибки_текст,450,0)
    Фигуры.Переместить (количество_слов_текст,0,0)

    while (true) do
        Программа.Задержка 100
        Фигуры.УстановитьТекст (ошибки_текст,(sprintf "ошибки = %d" ошибки))
        Фигуры.УстановитьТекст (количество_слов_текст,(sprintf "счет = %d" количество_слов ))
        Фигуры.УстановитьТекст (введенные_буквы,(введенные_буквы_игрока))
else 
    if Файл.Существует("ошибка.txt")then
        Файл.Удалить ("ошибка.txt")
    let ошибка = sprintf "%A - код ошибки 1" DateTime.Now 
    Файл.ДобавитьВсеЛинии ("ошибка.txt", [ошибка])
    let ошибка = Фигуры.ДобавитьТекст "Отсутствует файл \"словарь.txt\""
    Фигуры.Переместить (ошибка,80,220)
    Программа.Задержка 4000