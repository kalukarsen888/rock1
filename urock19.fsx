#r "nuget: FunSharp.Ru"
#r "nuget: FSharp.Core.Russian, 0.0.2"

open Библиотека
open Фшарп.Ядро
open Библиотека.Цвета
ГрафическоеОкно.ЦветПера <-Цвета.Синий
ГрафическоеОкно.ЦветКисти <-Цвета.Синий
ГрафическоеОкно.ЦветФона <-Цвета.Синий
let список = [9;7;3;9;5;6;9;9;1] 
напечататьфн "Количество элементов в списке"
напечататьфн "%d" список.Length
напечататьфн "Все элементы в списке через цикл"
for символы in список do
    напечататьфн "%d" символы

напечататьфн "Все элементы в списке с прамой индексацией"
let x = 9
напечататьфн "%d" список[0]
напечататьфн "%d" список[1]
напечататьфн "%d" список[2]
напечататьфн "%d" список[3]
напечататьфн "%d" список[4]
напечататьфн "%d" список[5]
напечататьфн "%d" список[6]
напечататьфн "%d" список[7]
напечататьфн "%d" список[8]
напечататьфн "%d" список[x-2]
напечататьфн "%d" список[4]
напечататьфн "индекс числа 7 "
let mutable индекс = -1
let mutable количество = 0
for номер = 0 to список.Length - 1 do
    let элемент = список[номер]
    if элемент = 7 then
        индекс <- номер
        //напечататьфн "%d " номер
        
        // напечататьфн "%d" номер
        //напечататьфн "%d %d" номер элемент

// if список.Length %2 = 0 then 
//     напечататьфн "%d" список
//for номер = 0 to
напечататьфн "%d" индекс

let больше_3 элемент =
    элемент > 3

let число_7 = список |> Список.фильтр (fun элемент -> элемент = 7)
let числа_больше_3_ = список |> Список.фильтр больше_3
напечататьфн "кол-во чисел равных 7"
if число_7.Length = 0 then 
    printfn "-1"
else
    напечататьфн "%d" число_7.Length

// Напечатай индекс/номер в массиве числа которое равно 7
// если числа в массиве нет, напиши -1
